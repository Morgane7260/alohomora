{"ast":null,"code":"var _jsxFileName = \"/home/morgane/Documents/alohomora/front/src/component/Oeuvres/Commentaires.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass Commentaires extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comments: [],\n      oeuvres_id: null,\n      users_id: null,\n      texte: \"\",\n      oeuvreId: 1\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"/alohomora/commentaires\").then(response => response.data).then(response => {\n      this.setState({\n        comments: response\n      });\n    });\n  }\n\n  postComment() {\n    const _this$state = this.state,\n          texte = _this$state.texte,\n          oeuvres_id = _this$state.oeuvres_id,\n          users_id = _this$state.users_id;\n    axios.post(\"/alohomora/commentaires\", {\n      texte,\n      oeuvres_id,\n      users_id\n    }).then(res => {\n      if (res.error) {\n        alert(res.error);\n      }\n    }).catch(e => {\n      console.error(e);\n      alert(\"nope\");\n    });\n  }\n\n  render() {\n    const comments = this.state.comments;\n    const oeuvreId = this.props.oeuvreId;\n    const showComments = comments.filter(comment => !oeuvreId || comment.oeuvres_id === oeuvreId);\n    return React.createElement(\"div\", {\n      className: \"comments-contain\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, showComments.map((comment, id) => React.createElement(\"div\", {\n      className: \"comment-contain\",\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, comment.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, comment.texte))), React.createElement(\"div\", {\n      className: \"comments-post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"textarea\",\n      label: \"Commentaire :\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Envoyer\"))));\n  }\n\n}\n\nexport default Commentaires;","map":{"version":3,"sources":["/home/morgane/Documents/alohomora/front/src/component/Oeuvres/Commentaires.jsx"],"names":["React","Component","axios","Commentaires","constructor","props","state","comments","oeuvres_id","users_id","texte","oeuvreId","componentDidMount","get","then","response","data","setState","postComment","post","res","error","alert","catch","e","console","render","showComments","filter","comment","map","id","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AACnCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,UAAU,EAAE,IAFD;AAGXC,MAAAA,QAAQ,EAAE,IAHC;AAIXC,MAAAA,KAAK,EAAE,EAJI;AAKXC,MAAAA,QAAQ,EAAE;AALC,KAAb;AAOD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBV,IAAAA,KAAK,CACFW,GADH,CACO,yBADP,EAEGC,IAFH,CAEQC,QAAQ,IAAIA,QAAQ,CAACC,IAF7B,EAGGF,IAHH,CAGQC,QAAQ,IAAI;AAChB,WAAKE,QAAL,CAAc;AACZV,QAAAA,QAAQ,EAAEQ;AADE,OAAd;AAGD,KAPH;AAQD;;AAEDG,EAAAA,WAAW,GAAG;AAAA,wBAC4B,KAAKZ,KADjC;AAAA,UACJI,KADI,eACJA,KADI;AAAA,UACGF,UADH,eACGA,UADH;AAAA,UACeC,QADf,eACeA,QADf;AAEZP,IAAAA,KAAK,CACFiB,IADH,CACQ,yBADR,EACmC;AAC/BT,MAAAA,KAD+B;AAE/BF,MAAAA,UAF+B;AAG/BC,MAAAA;AAH+B,KADnC,EAMGK,IANH,CAMQM,GAAG,IAAI;AACX,UAAIA,GAAG,CAACC,KAAR,EAAe;AACbC,QAAAA,KAAK,CAACF,GAAG,CAACC,KAAL,CAAL;AACD;AACF,KAVH,EAWGE,KAXH,CAWSC,CAAC,IAAI;AACVC,MAAAA,OAAO,CAACJ,KAAR,CAAcG,CAAd;AACAF,MAAAA,KAAK,CAAC,MAAD,CAAL;AACD,KAdH;AAeD;;AAEDI,EAAAA,MAAM,GAAG;AAAA,UACCnB,QADD,GACc,KAAKD,KADnB,CACCC,QADD;AAAA,UAECI,QAFD,GAEc,KAAKN,KAFnB,CAECM,QAFD;AAGP,UAAMgB,YAAY,GAAGpB,QAAQ,CAACqB,MAAT,CACnBC,OAAO,IAAI,CAAClB,QAAD,IAAakB,OAAO,CAACrB,UAAR,KAAuBG,QAD5B,CAArB;AAGA,WACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGgB,YAAY,CAACG,GAAb,CAAiB,CAACD,OAAD,EAAUE,EAAV,KAChB;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAiC,MAAA,GAAG,EAAEA,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,OAAO,CAACG,IAAb,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIH,OAAO,CAACnB,KAAZ,CAFF,CADD,CADH,EAOE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,KAAK,EAAC,eAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,CADF,CAPF,CADF;AAgBD;;AAhEkC;;AAmErC,eAAeP,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass Commentaires extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comments: [],\n      oeuvres_id: null,\n      users_id: null,\n      texte: \"\",\n      oeuvreId: 1\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"/alohomora/commentaires\")\n      .then(response => response.data)\n      .then(response => {\n        this.setState({\n          comments: response\n        });\n      });\n  }\n\n  postComment() {\n    const { texte, oeuvres_id, users_id } = this.state;\n    axios\n      .post(\"/alohomora/commentaires\", {\n        texte,\n        oeuvres_id,\n        users_id\n      })\n      .then(res => {\n        if (res.error) {\n          alert(res.error);\n        }\n      })\n      .catch(e => {\n        console.error(e);\n        alert(\"nope\");\n      });\n  }\n\n  render() {\n    const { comments } = this.state;\n    const { oeuvreId } = this.props;\n    const showComments = comments.filter(\n      comment => !oeuvreId || comment.oeuvres_id === oeuvreId\n    );\n    return (\n      <div className=\"comments-contain\">\n        {showComments.map((comment, id) => (\n          <div className=\"comment-contain\" key={id}>\n            <h1>{comment.name}</h1>\n            <p>{comment.texte}</p>\n          </div>\n        ))}\n        <div className=\"comments-post\">\n          <form>\n            <input type=\"textarea\" label=\"Commentaire :\" />\n            <button>Envoyer</button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Commentaires;\n"]},"metadata":{},"sourceType":"module"}