{"ast":null,"code":"var _jsxFileName = \"/home/morgane/Documents/alohomora/front/src/component/Users/Inscription.jsx\";\nimport React, { Component } from \"react\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nimport { Button } from \"reactstrap\";\n\nclass Inscription extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      password: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(AvForm, {\n      className: \"Form_Connexion\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(AvField, {\n      name: \"name\",\n      type: \"text\",\n      errorMessage: \"Invalid name\",\n      validate: {\n        required: {\n          value: true\n        },\n        pattern: {\n          value: \"^[A-Za-z0-9]+$\"\n        },\n        minLength: {\n          value: 6\n        },\n        maxLength: {\n          value: 16\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }), React.createElement(AvField, {\n      name: \"nameCustomMessage\",\n      type: \"text\",\n      validate: {\n        required: {\n          value: true,\n          errorMessage: \"Entrez un pseudonyme ici\"\n        },\n        pattern: {\n          value: \"^[A-Za-z0-9]+$\",\n          errorMessage: \"Votre nom ne peut contenir que des lettres et des chiffres\"\n        },\n        minLength: {\n          value: 4,\n          errorMessage: \"Votre nom doit contenir au minimum 4 caractères\"\n        },\n        maxLength: {\n          value: 16,\n          errorMessage: \"Votre nom ne peut excéder 16 caractères\"\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Valider\"));\n  }\n\n}\n\nexport default Inscription;","map":{"version":3,"sources":["/home/morgane/Documents/alohomora/front/src/component/Users/Inscription.jsx"],"names":["React","Component","AvForm","AvField","Button","Inscription","constructor","props","state","name","password","render","required","value","pattern","minLength","maxLength","errorMessage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,gCAAhC;AACA,SAASC,MAAT,QAAuB,YAAvB;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAClCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,YAAY,EAAC,cAHf;AAIE,MAAA,QAAQ,EAAE;AACRC,QAAAA,QAAQ,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SADF;AAERC,QAAAA,OAAO,EAAE;AAAED,UAAAA,KAAK,EAAE;AAAT,SAFD;AAGRE,QAAAA,SAAS,EAAE;AAAEF,UAAAA,KAAK,EAAE;AAAT,SAHH;AAIRG,QAAAA,SAAS,EAAE;AAAEH,UAAAA,KAAK,EAAE;AAAT;AAJH,OAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAYE,oBAAC,OAAD;AACE,MAAA,IAAI,EAAC,mBADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,QAAQ,EAAE;AACRD,QAAAA,QAAQ,EAAE;AAAEC,UAAAA,KAAK,EAAE,IAAT;AAAeI,UAAAA,YAAY,EAAE;AAA7B,SADF;AAERH,QAAAA,OAAO,EAAE;AACPD,UAAAA,KAAK,EAAE,gBADA;AAEPI,UAAAA,YAAY,EACV;AAHK,SAFD;AAORF,QAAAA,SAAS,EAAE;AACTF,UAAAA,KAAK,EAAE,CADE;AAETI,UAAAA,YAAY,EAAE;AAFL,SAPH;AAWRD,QAAAA,SAAS,EAAE;AACTH,UAAAA,KAAK,EAAE,EADE;AAETI,UAAAA,YAAY,EAAE;AAFL;AAXH,OAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,EAiCE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAjCF,CADF;AAqCD;;AA/CiC;;AAkDpC,eAAeZ,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nimport { Button } from \"reactstrap\";\n\nclass Inscription extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      password: \"\"\n    };\n  }\n\n  render() {\n    return (\n      <AvForm className=\"Form_Connexion\">\n        <AvField\n          name=\"name\"\n          type=\"text\"\n          errorMessage=\"Invalid name\"\n          validate={{\n            required: { value: true },\n            pattern: { value: \"^[A-Za-z0-9]+$\" },\n            minLength: { value: 6 },\n            maxLength: { value: 16 }\n          }}\n        />\n        <AvField\n          name=\"nameCustomMessage\"\n          type=\"text\"\n          validate={{\n            required: { value: true, errorMessage: \"Entrez un pseudonyme ici\" },\n            pattern: {\n              value: \"^[A-Za-z0-9]+$\",\n              errorMessage:\n                \"Votre nom ne peut contenir que des lettres et des chiffres\"\n            },\n            minLength: {\n              value: 4,\n              errorMessage: \"Votre nom doit contenir au minimum 4 caractères\"\n            },\n            maxLength: {\n              value: 16,\n              errorMessage: \"Votre nom ne peut excéder 16 caractères\"\n            }\n          }}\n        />\n\n        <Button color=\"primary\">Valider</Button>\n      </AvForm>\n    );\n  }\n}\n\nexport default Inscription;"]},"metadata":{},"sourceType":"module"}